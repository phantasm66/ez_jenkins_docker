node {
    def app

    label 'docker_build'

    stage('Clone repository...') {
        checkout scm
    }

    stage('Start docker daemon in our build container...') {
        /*
           We do this instead of calling 'docker build', etc..
           because the defined 'app' object holds info needed
           for launching and running tests inside a container
           launched from the newly built image
        */
        sh '/usr/bin/docker -d'
    }

    /* Enter our ez_jenkins_docker project sub-directory */
    dir ('redis') {

        stage('Build image...') {
            app = docker.build('ezredis', '--file Dockerfile .')
        }

        stage('Run tests...') {
            app.inside {
                /*
                   You could also call a more comprehensive script
                   to run your tests that was added to our slave
                   docker image builder image during it's original
                   docker build
                */
                sh 'echo "Tests passed"'
            }
        }

        stage('Push image') {
            /* Tag and push the built image to our registry */
            docker.withRegistry('https://registry.hub.docker.com', 'docker-hub-credentials') {
                app.push("latest")
            }
        }

    }
}
